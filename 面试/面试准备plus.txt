# 1.自我介绍？

- 姓名
- 学校
- 专业、年级、GPA、排名
- 荣誉
- 知识范围+上过的课程
- 职业规划 + 擅长工具
- 项目
  - 计网项目
    - 大二

  - 软工三项目
    - 难度高一些


# 2.项目介绍？

## 2.1 项目概要

- 项目的背景



- 项目的内容



- 项目中你的角色



- 项目中使用的技术，为什么使用这些技术?
  - SpringBoot、Vue、Java
  - Java、Spring和SpringBoot是目前JEE开发的最好用的工具；
  - Vue、React：
    - 相似的特性：
      - 流行的 JavaScript 的 UI 框架
      - 都有丰富的组件库支持
    - 不同的特性：
      - 理念不同： Vue是组件化，将每个组件里的HTML、CSS、JS组合，通过组件间的相互协调和协作来实现功能；React是All in JavaScript，通过 JavaScript 来生成 HTML和操作 CSS。
      - 生命周期不同
        - Vue Create Mount Update Destroy
      - **React**库更丰富一点，实际的企业应用使用React较多；Vue更易于上手一些，更轻量级一些，适合小型开发；



- 你对这些技术的理解程度（只会调用接口？、该技术的实现原理、该技术解决了什么问题、该技术有什么替代方案、该技术有什么缺陷……）



## 2.2 项目难点和亮点

### 1.跨域问题



### 2.文件（包括图片）上传和下载



### 3.数据库设计



### 4.前后端架构



### 5.设计模式？

### 



# 3.计网

5个部分：OSI七层、HTTP与HTTPS、TCP与UDP、状态码、发送请求的过程



1.TCP和UDP的联系与区别 

2.TCP是面向连接的吗？通信前建立连接的三次握手。 

类似问题：

- TCP如何做到可靠传输？
- TCP三次握手、四次挥手过程
- TCP为什么需要三次握手，不能两次？
- 为什么TCP四次挥手时，最先发起断开连接请求的一方需要延迟一段时间？



3.tcp是OSI模型的哪一层？

​	类似问题：

- ip协议是OSI的哪一层
- tcp基于什么协议？
- 什么协议基于TCP协议？

4.OSI七层每层包含的内容和作用？对比TCP、IP模型？



5.https协议和http协议的联系和区别是什么？

- HTTP协议的作用、基于什么协议、

- HTTPS为什么比HTTP更安全？HTTPS的流程是什么？
- HTTPS的加密机制
- 已经建立了https联系，那么接下来的通信还是基于https协议的吗？
  - 接下来的是基于HTTP
    - 为什么呢？
    - 是因为开销还是其他原因？

6.状态码

- 2xx成功
- 3xx重定向
- 4xx客户端错误
  - 404
  - 400
- 5xx服务端错误



7.RESTful架构

- GET、POST、PUT、DELETE
- GET和POST的联系与区别



8.客户端的浏览器如何通过**URL**获得某个网站的内容？

- 检查缓存
- 查hosts
- 查DNS服务，URL的域名到ip地址
- 根据ip，发送HTTP请求
- 得到HTTP响应，通过HTML生成DOM树，通过CSS生成规则树，二者结合后形成RenderTree渲染树，浏览器根据渲染树渲染，得到网站内容



# 4.操作系统

- 进程状态转换模型

  - 3+2+2
  - 3：运行态、就绪态、等待态 短程调度
  - 2：就绪挂起、等待挂起 中程调度
  - 2：新建态、终止态（结束态） 长程调度

- 进程控制块、进程映像（很少问）

  - 进程映像：进程控制块、核心栈、用户栈、程序段、数据段

  

- **进程与线程**（重点）

  - 进程与线程的区别和联系
  - 多个进程或线程间的通信方式
  - 线程同步的方式（锁机制）
    - 互斥锁（mutex）
    - 条件变量（condition）
    - 读写锁（reader-writer lock）
    - 信号量、关中断、临界区、原语
  - 死锁产生的原因是什么？
    - 进程之间也能发生死锁吗？
    - 银行家算法？
  - 多线程条件下，如何保证线程安全？



- 内存管理
  - 多道程序
  - 虚拟内存
    - 原理和机制
    - 段页式
    - 页表和反向页表
  - 内存里的堆区和栈区
  - 内存加载的过程



- 牛客上看到的场景题：
  - 多线程访问了非法内存，会影响其他线程吗？比如一个空指针，或者野指针。







# 5.Java

## 5.1	 Java基础

- 集合类Collection相关 
  - 如：hashmap、ArrayList && LinkedList
  - 哪些有序，哪些无序
  - 分类？
  - HashMap底层结构 （Java8 数组+[链表](https://www.nowcoder.com/jump/super-jump/word?word=链表)+[红黑树](https://www.nowcoder.com/jump/super-jump/word?word=红黑树)）
  - HashTable和HashMap的区别
- static、final关键字
  - final可以用于形参吗？ final在并发里的作用？

## 5.2	Java框架

- Spring和SpringBoot联系
- Spring核心特性 AOP 和 DI
  - IOC底层怎么实现的？

- 看过Spring源码吗？
  - 个人建议答看过，说一下Spring如何解决循环依赖以及其三级缓存原理




## 5.3	Java并发

1. synchronized、reentrantlock、volatile对比，原理
2. HashMap会有并发问题吗？ 怎么解决？ 为什么不用Hashtable？
3. AQS是什么？ 原理，独享模式共享模式
4. CAS是什么，可能出现的问题，如何解决
5. JDK1.6对于synchronized的优化过程
6. 线程池如何使用？ 参数的意义？（线程核心数、线程最大核心数这些?）
7. 线程池如何确定其中线程数量？ cpu和io方向考虑
8. 悲观锁 乐观锁
9. BIO、NIO区别联系
   ......
   Java的锁内容太多了，尽量面试的时候往操作系统上靠，本质上和 PV中的进程互斥与协作、死锁、cache缓存一致性相关





## 5.4	JVM

1. JVM内存结构介绍
2. 类加载过程
3. 对象创建过程
4. 垃圾回收这个概念；如何发现垃圾（计数法、tracing链路法）；发现垃圾了如何解决（3+1方法，本质上是内存管理与碎片管理，tmd都是操作系统）、JVM里面什么时候触发GC？
5. Java里垃圾回收的收集器；JDK各版本默认的
6. 比较重要的G1收集器、CMS收集器
   垃圾收集器主要和JVM里的新生代、老生代、元空间相关
7. JVM的堆和栈



- 算法：
- **引用计数算法**
- **可达性分析算法**
  - 通过 GC Roots 作为起始点进行搜索，能够到达到的对象都是存活的，不可达的对象可被回收。



Java 虚拟机使用该算法来判断对象是否可被回收，在 Java 中 GC Roots 一般包含以下内容:

- 虚拟机栈中引用的对象
- 本地方法栈中引用的对象
- 方法区中类静态属性引用的对象
- 方法区中的常量引用的对象



## 5.5	面向对象和设计模式

- 面向对象特性？
- 接口

- OO原则

- 常用的设计模式？
- 单例模式\模板方法\工厂模式\迭代器模式\策略模式\代理模式
- 代理模式，单例模式在项目中怎么用的，工厂模式在实际中怎么用的



# 6.数据库和MySQL

## 6.1	数据库

- 数据库有哪些配置？
- mybatis为什么能访问数据库？mybatis映射原理？
- 数据库连接池的原理？
- JDBC连接数据库的步骤和原理？
  - JDBCTemplate
- 数据库的原子性怎么实现？
- 事务
  - 事务四大特性
  - 事务从开始到结束时都干了什么?
- 场景题：如果让你实现数据库，怎么保证一个数据是原子的呢？（我说加锁）如果加锁，做到一半，事务挂掉怎么办？
- 索引
  - 建立索引是为了干什么
  - 有什么时候不适合建索引
  - 建了索引一定能提高性能么（我这个时候不知道为啥有点发蒙了，说到了选错索引的情况了）
  - 索引的数据结构
  - 插入删除和修改的话，索引会有什么影响么
- 视图
  - 什么是视图，视图的使用场景有哪些？



## 6.2	MySQL

- InnoDB && MyISAM对比
- 为什么使用索引？ 索引为什么是B+树？
- 事务隔离级别、MVCC
- 情景题：给一个具体查询，问一下怎么走索引或者需不需要做索引
- 可重复读相比提交读如何解决幻读？仍然可能出现幻读的场景是什么？
- 表锁、行锁介绍；加锁过程
- undo log、redo log、bin log
- mysql释放锁的时机
- mysql索引失效的情况
- ......











# 7.云、分布式、微服务







# 8.工具

## 8.1	Redis

- Redis是什么？
- Redis的原理概述？
- Redis的作用、替代品和缺陷？
- 应用场景？
- Redis有哪些锁？



## 8.2	Mybatis





## 8.3	Mockito和Jacoco



## 8.4	Docker和Jenkins



## 8.5	Hystrix、Zuul、……

没时间看的



## 8.6	Elasticsearch和logstash



## 8.7	Hadoop和Spark