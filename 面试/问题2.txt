# 1.自我介绍？



# 2.项目介绍？

## 2.1 项目概要

## 2.2 项目难点

### 1.跨域

### 2.文件或图片上传

### 3.数据库设计

### 4.前后端架构

### 5.设计模式？

### 6.项目亮点



# 3.计网

1.TCP和UDP的联系与区别 

2.TCP是面向连接的吗？通信前建立连接的三次握手。 

类似问题：

- TCP如何做到可靠传输？
- TCP三次握手、四次挥手过程
- TCP为什么需要三次握手，不能两次？
- 为什么TCP四次挥手时，最先发起断开连接请求的一方需要延迟一段时间？

3.tcp是OSI模型的哪一层？

​	类似问题：

- ip协议是OSI的哪一层
- tcp基于什么协议？
- 什么协议基于TCP协议？

4.OSI七层每层包含的内容和作用？对比TCP、IP模型？

5.https协议和http协议的联系和区别是什么？

- HTTP协议的作用、基于什么协议、

- HTTPS为什么比HTTP更安全？HTTPS的流程是什么？
- HTTPS的加密机制
- 已经建立了https联系，那么接下来的通信还是基于https协议的吗？
  - 接下来的是基于HTTP
    - 为什么呢？
    - 是因为开销还是其他原因？


Java:

基础：
集合类相关 hashmap、ArrayList && LinkedList
static、final关键字（final可以用于形参吗？ final在并发里的作用


框架相关：

1. Spring SpringBoot联系
2. Spring AOP && DI讲解
3. 看过Spring源码吗？
个人建议答看过，说一下Spring如何解决循环依赖以及其三级缓存原理

MySQL:

1. InnoDB && MyISAM对比
2. 为什么使用索引？ 索引为什么是B+树
3. 情景题：给一个具体查询，问一下怎么走索引或者需不需要做索引
4. 事务隔离级别、MVCC
5. 可重复读相比提交读如何解决幻读？仍然可能出现幻读的场景是什么？
6. 表锁、行锁介绍；加锁过程
7. undo log、redo log、bin log
......
并发：

1. synchronized、reentrantlock、volatile对比，原理
2. HashMap会有并发问题吗？ 怎么解决？ 为什么不用Hashtable？
3. AQS是什么？ 原理，独享模式共享模式
4. CAS是什么，可能出现的问题，如何解决
5. JDK1.6对于synchronized的优化过程
6. 线程池如何使用？ 参数的意义
7. 线程池如何确定其中线程数量？ cpu和io方向考虑
8. 悲观锁 乐观锁
9. BIO、NIO区别联系
......
Java的锁内容太多了，尽量面试的时候往操作系统上靠，本质上和 PV中的进程互斥与协作、死锁、cache缓存一致性相关

JVM：
1. JVM内存结构介绍
2. 类加载过程
3. 对象创建过程
4. 垃圾回收这个概念；如何发现垃圾（计数法、tracing链路法）；发现垃圾了如何解决（3+1方法，本质上是内存管理与碎片管理，tmd都是操作系统）、JVM里面什么时候触发GC？
5. Java里垃圾回收的收集器；JDK各版本默认的
6. 比较重要的G1收集器、CMS收集器
垃圾收集器主要和JVM里的新生代、老生代、元空间相关

其他基本知识：
1. 操作系统的内存管理（虚存）

# 4.