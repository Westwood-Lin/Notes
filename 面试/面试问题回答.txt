## 2.1 项目概要

- 项目的背景

软工三：

- 项目的内容和项目难度

一个基于SpringBoot和Vue的前后端分离的项目。

- 项目中你的角色

前端开发、后端Controller和Service层的部分实现；参与了数据库表的设计。

- 项目中使用的技术，为什么使用这些技术?

- - SpringBoot、Vue、Java
  - Java、Spring和SpringBoot是目前JEE开发的最好用的工具；
  - Vue、React：
    - 相似的特性：
      - 流行的 JavaScript 的 UI 框架
      - 都有丰富的组件库支持
    - 不同的特性：
      - 理念不同： Vue是组件化，将每个组件里的HTML、CSS、JS组合，通过组件间的相互协调和协作来实现功能；React是All in JavaScript，通过 JavaScript 来生成 HTML和操作 CSS。
      - 生命周期不同
        - Vue Create Mount Update Destroy
      - **React**库更丰富一点，实际的企业应用使用React较多；Vue更易于上手一些，更轻量级一些，适合小型开发；



- 你对这些技术的理解程度（只会调用接口？、该技术的实现原理、该技术解决了什么问题、该技术有什么替代方案、该技术有什么缺陷……）



## 2.2 项目难点和亮点

### 1.文件（包括图片）上传下载

- 使用阿里云的OSS服务
- 场景：
  - 一个测试任务的发包方，将测试任务需要的应用上传；测试工人要下载这个应用测试；
- 流程：
  - 文件上传到OSS服务时，会要进行身份验证。前端先发送一个请求给后端，获取登录OSS服务需要的Token。前端获取Token以后，将文件上传到OSS服务，OSS服务会返回一个该文件的可访问的URL，前端再将该文件的连接发送到后端，进行保存；以后测试工人需要下载应用时，就可以通过这个URL链接来下载文件；



### 2.浏览器的跨域问题

为什么会产生跨域问题？

- 浏览器有同源策略，同源：协议、ip域名、端口都必须一致
- 有任何一项不一致，就是不同源；浏览器认为有安全风险；

解决问题：

- JSONP：就是动态生成一个script，由于script不受同源策略的限制，就可以去请求不同域的接口了

- CORS：跨域资源共享
- Nginx反向代理



遇到的问题：

- 图片存储OSS

- 用户头像
  - 图片
  - 一个小组件VueCropper 放大头像进行裁剪
  - 跨域问题
- 传图片都是传的OSS上图片存储的连接，用户中心组件把头像链接传给VueCropper的时候，先用base64加密，然后到子组件再用base64解密，就解决了这个问题；



### 3.数据库设计

ER图的关系；

实体ENtity

一对一、一对多、多对多的关系；

一对多；多方就要有一方的id；

多对多；就要单独抽离一个表出来；

- 用户身份

### 4.前后端架构

- 前后端分离
- 后端：分层Controller——Service——DAO层



### 5.设计模式？

- 前端：状态模式、策略模式



### 6.相似度计算